var subject = require('./subject.js')
var mock = require('mock-fs');
subject.inc("(undefined) 234-5678",undefined);
subject.inc("(undefined) 234-5678","hello");
subject.inc(-1,undefined);
subject.inc(-1,"hello");
subject.inc(1,undefined);
subject.inc(1,"hello");
subject.weird(8,-1,41,"strict");
subject.weird(8,-1,41,"hello");
subject.weird(8,-1,41,"werw");
subject.weird(8,-1,41,"werw");
subject.weird(8,-1,41,"werw");
subject.weird(8,-1,41,"werw");
subject.weird(8,-1,43,"strict");
subject.weird(8,-1,43,"hello");
subject.weird(8,-1,43,"werw");
subject.weird(8,-1,43,"werw");
subject.weird(8,-1,43,"werw");
subject.weird(8,-1,43,"werw");
subject.weird(8,1,41,"strict");
subject.weird(8,1,41,"hello");
subject.weird(8,1,41,"werw");
subject.weird(8,1,41,"werw");
subject.weird(8,1,41,"werw");
subject.weird(8,1,41,"werw");
subject.weird(8,1,43,"strict");
subject.weird(8,1,43,"hello");
subject.weird(8,1,43,"werw");
subject.weird(8,1,43,"werw");
subject.weird(8,1,43,"werw");
subject.weird(8,1,43,"werw");
subject.weird(6,-1,41,"strict");
subject.weird(6,-1,41,"hello");
subject.weird(6,-1,41,"werw");
subject.weird(6,-1,41,"werw");
subject.weird(6,-1,41,"werw");
subject.weird(6,-1,41,"werw");
subject.weird(6,-1,43,"strict");
subject.weird(6,-1,43,"hello");
subject.weird(6,-1,43,"werw");
subject.weird(6,-1,43,"werw");
subject.weird(6,-1,43,"werw");
subject.weird(6,-1,43,"werw");
subject.weird(6,1,41,"strict");
subject.weird(6,1,41,"hello");
subject.weird(6,1,41,"werw");
subject.weird(6,1,41,"werw");
subject.weird(6,1,41,"werw");
subject.weird(6,1,41,"werw");
subject.weird(6,1,43,"strict");
subject.weird(6,1,43,"hello");
subject.weird(6,1,43,"werw");
subject.weird(6,1,43,"werw");
subject.weird(6,1,43,"werw");
subject.weird(6,1,43,"werw");
subject.weird("(strict) 234-5678",-1,41,"strict");
subject.weird("(strict) 234-5678",-1,41,"hello");
subject.weird("(strict) 234-5678",-1,41,"werw");
subject.weird("(strict) 234-5678",-1,41,"werw");
subject.weird("(strict) 234-5678",-1,41,"werw");
subject.weird("(strict) 234-5678",-1,41,"werw");
subject.weird("(strict) 234-5678",-1,43,"strict");
subject.weird("(strict) 234-5678",-1,43,"hello");
subject.weird("(strict) 234-5678",-1,43,"werw");
subject.weird("(strict) 234-5678",-1,43,"werw");
subject.weird("(strict) 234-5678",-1,43,"werw");
subject.weird("(strict) 234-5678",-1,43,"werw");
subject.weird("(strict) 234-5678",1,41,"strict");
subject.weird("(strict) 234-5678",1,41,"hello");
subject.weird("(strict) 234-5678",1,41,"werw");
subject.weird("(strict) 234-5678",1,41,"werw");
subject.weird("(strict) 234-5678",1,41,"werw");
subject.weird("(strict) 234-5678",1,41,"werw");
subject.weird("(strict) 234-5678",1,43,"strict");
subject.weird("(strict) 234-5678",1,43,"hello");
subject.weird("(strict) 234-5678",1,43,"werw");
subject.weird("(strict) 234-5678",1,43,"werw");
subject.weird("(strict) 234-5678",1,43,"werw");
subject.weird("(strict) 234-5678",1,43,"werw");
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/myLibrary','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/myLibrary','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"}});
	subject.fileTest('path/myLibrary','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/myLibrary','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/myLibrary','pathContent/file2');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/myLibrary','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"}});
	subject.fileTest('path/myLibrary','pathContent/file2');
mock.restore();
mock({});
	subject.fileTest('path/myLibrary','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"},"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"pathContent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({"path/fileExists":{},"path/newPath":{"val":"anotherVal"}});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file2');
mock.restore();
subject.normalize('793-103-0506 x63958');
subject.format('(505) 319-3185 x780','(505) 319-3185 x780',options={normalize: 'Random'});
subject.format('(505) 319-3185 x780','(505) 319-3185 x780','(505) 319-3185 x780');
subject.blackListNumber('(106) 564-8391 x9683');
subject.blackListNumber("(212) 234-5678");
